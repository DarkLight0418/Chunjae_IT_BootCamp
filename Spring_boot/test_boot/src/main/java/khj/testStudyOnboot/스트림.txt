categories.stream()
        // ① stream() : List<Category> → Stream<Category> 형태로 변환
        //    즉, 리스트 안의 카테고리들을 하나씩 흘려보내는 "데이터 흐름"을 만듭니다.

        .filter(c -> c.getParent() == null)
        // ② filter() : 스트림 안의 요소들 중 조건을 만족하는 것만 남깁니다.
        //    여기서는 getParent() == null 인 경우, 즉 부모가 없는 카테고리만 통과시킵니다.
        //    → 1차 카테고리만 남음.

        .forEach(parent -> {
            // ③ forEach() : 스트림의 각 요소(여기서는 parent)를 하나씩 꺼내서
            //    괄호 안의 람다식(코드 블록)을 실행합니다.
            //    즉, 1차 카테고리들을 순회하면서 아래의 코드가 실행됩니다.

            System.out.println("▶ " + parent.getName());
            // ④ 현재 1차 카테고리의 이름을 출력합니다.

            grouped.getOrDefault(parent, List.of())
                    // ⑤ grouped : Map<Category, List<Category>> 형태입니다.
                    //    key(부모 Category) → value(자식 Category 리스트)
                    //    getOrDefault() : 해당 부모 key가 없으면 빈 리스트(List.of())를 반환
                    //    → 즉, 자식이 없는 카테고리도 안전하게 처리 가능.

                    .forEach(child -> System.out.println("   └ " + child.getName()));
                    // ⑥ forEach()로 자식 리스트를 순회하며 각각의 이름을 출력합니다.
                    //    └ 기호를 붙여 트리형 구조로 보이게 만듭니다.
        });
